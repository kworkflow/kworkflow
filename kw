#!/bin/bash

# Note: the following line should not be modified, and neither the token should
# be repeated in this file because It will be replaced during installation with
# the respective installation prefix.
KW_INSTALL_PREFIX=${KW_INSTALL_PREFIX:-"##KW_INSTALL_PREFIX_TOKEN##"}

KWORKFLOW=${KWORKFLOW:-"kw"}

# Global paths
KW_LIB_DIR=${KW_LIB_DIR:-"$KW_INSTALL_PREFIX/lib/kw"}
KW_SHARE_DOC_DIR=${KW_SHARE_DIR:-"$KW_INSTALL_PREFIX/share/doc/kw/"}
KW_SHARE_MAN_DIR=${KW_SHARE_DIR:-"$KW_INSTALL_PREFIX/share/man"}
KW_SHARE_SOUND_DIR=${KW_SHARE_DIR:-"$KW_INSTALL_PREFIX/share/sound/kw"}
KW_ETC_DIR=${KW_ETC_DIR:-"$KW_INSTALL_PREFIX/etc/kw"}
KW_DATA_DIR=${KW_DATA_DIR:-"$HOME/.kw"}
KW_PLUGINS_DIR=${KW_PLUGINS_DIR:-"$KW_LIB_DIR/plugins"}
KW_CACHE_DIR="$HOME/.cache/kw"

# User data
# TODO: These two variables just introduce more complexity, try to get rid of
# them.
config_files_path=${config_files_path:-"$KW_DATA_DIR"}
statistics_path=${statistics_path:-"$KW_DATA_DIR/statistics"}

# Export external variables required by kworkflow
export KWORKFLOW

function kw()
{
  action="$1"
  shift

  mkdir -p "$KW_CACHE_DIR"

  case "$action" in
    init)
      (
        . "$KW_LIB_DIR/init.sh" --source-only

        init_kw
        return "$?"
      )
      ;;
    mount|mo)
      (
        . "$KW_LIB_DIR/vm.sh" --source-only

        vm_mount
        local ret="$?"
        alert_completion "kw mount" "$1"
        return "$ret"
      )
      ;;
    umount|um)
      (
        . "$KW_LIB_DIR/vm.sh" --source-only

        vm_umount
        local ret="$?"
        alert_completion "kw umount" "$1"
        return "$ret"
      )
      ;;
    boot|bo)
      (
        . "$KW_LIB_DIR/vm.sh" --source-only

        vm_boot
      )
      ;;
    up|u)
      (
        . "$KW_LIB_DIR/vm.sh" --source-only

        vm_up
      )
      ;;
    build|b)
      (
        . "$KW_LIB_DIR/mk.sh" --source-only

        mk_build '' "$@"
        local ret="$?"
        alert_completion "kw build" "$1"
        return "$ret"
      )
      ;;
    deploy|d)
      (
        . "$KW_LIB_DIR/mk.sh" --source-only

        kernel_deploy "$@"
        local ret="$?"
        alert_completion "kw deploy" "$1"
        return "$ret"
      )
      ;;
    bd)
      (
        . "$KW_LIB_DIR/mk.sh" --source-only

        mk_build && kernel_deploy "$@"
        local ret="$?"
        alert_completion "kw db" "$1"
        return "$ret"
      )
      ;;
    diff|df)
        . "$KW_LIB_DIR/diff.sh" --source-only

        diff_manager "$@"
      ;;
    ssh|s)
      (
        . "$KW_LIB_DIR/vm.sh" --source-only

        vm_ssh $@
      )
      ;;
    vars)
      (
        . "$KW_LIB_DIR/kw_config_loader.sh" --source-only

        show_variables
      )
      ;;
    codestyle|c)
      (
      . "$KW_LIB_DIR/checkpatch_wrapper.sh" --source-only

        execute_checkpatch $@
      )
      ;;
    maintainers|m)
      (
        . "$KW_LIB_DIR/get_maintainer_wrapper.sh" --source-only

        execute_get_maintainer $@
      )
      ;;
    configm|g)
      (
        . "$KW_LIB_DIR/config_manager.sh" --source-only

        execute_config_manager $@
      )
      ;;
    help|h)
      (
        . "$KW_LIB_DIR/help.sh" --source-only

        kworkflow_help
      )
      ;;
    explore|e)
      (
        . "$KW_LIB_DIR/explore.sh" --source-only

        explore "$@"
      )
      ;;
    man)
      (
        . "$KW_LIB_DIR/help.sh" --source-only

        kworkflow_man
      )
      ;;
    version|--version|-v)
      (
        . "$KW_LIB_DIR/help.sh" --source-only

        kworkflow_version
      )
      ;;
    statistics)
      (
        . "$KW_LIB_DIR/statistics.sh" --source-only

        statistics "$@"
      )
      ;;
    clear-cache)
        . "$KW_LIB_DIR/mk.sh" --source-only

        cleanup
      ;;
    # Subsystems support
    drm)
      (
        . "$KW_PLUGINS_DIR/subsystems/drm/drm.sh" --source-only

        drm_manager "$@"
      )
      ;;
    *)
      (
        . "$KW_LIB_DIR/help.sh" --source-only

        complain "Invalid option"
        kworkflow_help
        return 1
      )
      ;;
  esac
}

kw "$@"
